Description: "Cloudformation template for deploying architecture for stripe commissions project" 

Parameters:
  DatabaseName:
    Type: String
    Description: Name of up to 8 characters to identify your database
    AllowedPattern: "\\w{1,8}"
    Default: exDB
  DBMasterUsername:
    Type: String
    Description: Master username for the DB cluster
    Default: example
  DBMasterUserPassword:
    Type: String
    Description: Master user's password for the DB cluster
    Default: password
  DBInstanceClass:
    Type: String
    Description: Database instance type
    Default: db.t2.small
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:  !Join ['', [!Ref "AWS::StackName", "-VPC" ]]

  # Our VPC will need internet access:     
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    # Notice how you can't attach an IGW to a VPC unless both are created:
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.10.0/24
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list       
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.20.0/24
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list 
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B

  # Some route tables for our subnets:
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:   # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway   #This bit is critical
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway 

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  VPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: 
      - PublicSubnetA
      - PublicSubnetB
    Properties:
      GroupDescription: Security Group for our VPC
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort: 3306
        IpProtocol: TCP
        ToPort: 3306
      - CidrIp: 0.0.0.0/0
        FromPort: -1
        IpProtocol: -1
        ToPort: -1
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 3306
        IpProtocol: TCP
        ToPort: 3306
      - CidrIp: 0.0.0.0/0
        FromPort: -1
        IpProtocol: -1
        ToPort: -1
      VpcId:
        !Ref VPC

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DatabaseSubnetGroup
      SubnetIds:
      - !Ref PublicSubnetA
      - !Ref PublicSubnetB

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DatabaseName
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups: 
      - !Ref VPCSecurityGroup
      Engine: MySQL
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      PubliclyAccessible: true
      # MultiAZ: !Ref 'MultiAZ'
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot